//#!py
const MD2_S = [41,46,67,201,162,216,124,1,61,54,84,161,236,240,6,19,98,167,5,243,192,199,115,140,152,147,43,217,188,76,130,202,30,155,87,60,253,212,224,22,103,66,111,24,138,23,229,18,190,78,196,214,218,158,222,73,160,251,245,142,187,47,238,122,169,104,121,145,21,178,7,63,148,194,16,137,11,34,95,33,128,127,93,154,90,144,50,39,53,62,204,231,191,247,151,3,255,25,48,179,72,165,181,209,215,94,146,42,172,86,170,198,79,184,56,210,150,164,125,182,118,252,107,226,156,116,4,241,69,157,112,89,100,113,135,32,134,91,207,101,230,45,168,2,27,96,37,173,174,176,185,246,28,70,97,105,52,64,126,15,85,71,163,35,221,81,175,58,195,92,249,206,186,197,234,38,44,83,13,110,133,40,132,9,211,223,205,244,65,129,77,82,106,220,55,200,108,193,171,250,36,225,123,8,12,189,177,74,120,136,149,139,227,99,232,109,233,203,213,254,59,0,29,57,242,239,183,14,102,88,208,228,166,119,114,248,235,117,75,10,49,68,80,180,143,237,31,26,219,153,141,51,159,17,131,20]
const MD2_C = '0123456789abcdef'.split('')
function md2(message)
	'use strict';
	
	const M = [], X = [], C = []
	const length = message.length
	
	
	for let i = 0; i < 16; i++
		X[i] = C[i] = 0
	
	let L = 0, loop = 1
	let index = 0, start = 0, bytes = 0
	
    M[16] = M[17] = M[18] = 0
	
	while loop === 1
		for let i = 0; i < 3; i++
			M[i] = M[i + 16]
			
		for let i = 3; i < 19; i++
			M[i] = 0
			
		let i
		for i = start; index < length && i < 16; index++
			let code = message.charCodeAt(index)
			
			if code < 0x80
				M[i++] = code
			else if code < 0x800
				M[i++] = 0xc0 | (code >> 6)
				M[i++] = 0x80 | (code & 0x3f)
			else if code < 0xd800 || code >= 0xe000
				M[i++] = 0xe0 | (code >> 12)
				M[i++] = 0x80 | ((code >> 6) & 0x3f)
				M[i++] = 0x80 | (code & 0x3f)
			else
				code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff))
				M[i++] = 0xf0 | (code >> 18)
				M[i++] = 0x80 | ((code >> 12) & 0x3f)
				M[i++] = 0x80 | ((code >> 6) & 0x3f)
				M[i++] = 0x80 | (code & 0x3f)
				
		bytes += i - start
		start = i - 16

		if index === length && i < 16
			loop = 2
			let t = 16 - (bytes & 15)
		
			while i < 16
				M[i++] = t

		for let i = 0; i < 16; i++
			C[i] ^= MD2_S[M[i] ^ L]
			L = C[i]
			
		for let l = 0; l < loop; l++
			const B = l === 0 ? M : C;
			
			for let i = 0; i < 16; i++
				X[i + 16] = B[i]
				X[i + 32] = X[i + 16] ^ X[i]

			let t = 0;
			for let i = 0; i < 18; i++
				for let j = 0; j < 48; j++
					t = X[j] = X[j] ^ MD2_S[t]
				t = (t + i) & 0xFF
	
	const chrs = []
	for let i = 0; i < 16; i++
		chrs.push(
			MD2_C[(X[i] >> 4) & 0x0F],
			MD2_C[X[i] & 0x0F],
		)
		
    return chrs.join('')